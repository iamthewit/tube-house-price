TODO:

- Add EntityInterface Class that ListingEntity implements

- Add generic EntityCollection class that ListingEntityCollection extends
    - Can add the array iterator stuff in here

- Move repository and entity code into the Application namespace

- Add ListingService Class
    - Interact between repo and domain layer
    - Pull entities from the DB, transform them into domain objects
    - Pass domain listing objects into service, store the listing objects as listing entity objects in the repo

- Add validation to listing repository

- When testing use in memory sqlite db
    - run migrations before each test
    - tear down db after each test

- Add timestamps to ListingEntity (created_at, updated_at)

- Move tests into namespaced directories

- Add a router

General Notes:

Database
- Use in memory?
- Migrations system? Run migrations before tests

Listing Repository
- Find sources to seed the DB. Property websites etc

Listing Importer
- Create ListingImporter class to extract data from sources and prepare data to be stored in repository

Further down the line
- Add address as listing property