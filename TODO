Basic listing model complete
- Can create a collection of listings
- Listings contain basic info: lat, lng, price
- Decided on Sqlite DB

Next Steps
- Get repository creating and updating records in sqlite DB

- Add validation to listing repository

- Create Database Connection class
    - Class should be injected into repositories =
    - Class should use config values

    class Repository(SqliteConnection $connection) =

    class SqliteConnection(string $pathToDatabaseFile) =
        - class can hard code db type to sqlite =
        - can use DI to inject db path by checking value in config

    - When testing use in memory sqlite db
        - run migrations before each test
        - tear down db after each test

- config / environment variables


General Notes:

Dependencies
- DI container

Database
- Use in memory?
- Migrations system? Run migrations before tests

Listing Repository
- Find sources to seed the DB. Property websites etc

Listing Importer
- Create ListingImporter class to extract data from sources and prepare data to be stored in repository

Listing Factory
- Create factory to transform stored listing data into ListingModel objects and ListingCollection objects

Further down the line
- Add address as listing property