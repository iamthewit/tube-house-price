TODO:

- Router
    - Separate route definition from code that deals with routing
    - Employ http request / response package to make it easier to deal with setting response codes, headers etc

Listings
    - Add CRUD to ListingController
    - Add integration tests for Controller responses

Listing Service
    - Get filtering working on getListings method

Exception Handler
    - Add some exception handling for anything uncaught from controllers

- Tests
    - Get in memory sqlite DB working for tests
    - Move some phpunit bootstrapped stuff into custom test case (setup and teardown)

- Add validation to listing repository

- Add timestamps to ListingEntity (created_at, updated_at)
    - create a trait for this instead of adding to the interface? or make an abstract EntityTimestamps class?

- Move tests into namespaced directories

General Notes / Future Stuff:

Listing Repository
- Find sources to seed the DB. Property websites etc

Listing Importer
- Create ListingImporter class to extract data from sources and prepare data to be stored in repository

Further down the line
- Add address as listing property

Static Analysis
 - PHPStan?

Code Coverage Report from PHPUnit

XDebug

Docker container
